<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow
                          http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">
              
     <!-- Instancja klasy wykorzystywanej w spring-webflow -->
     <var name="user" class="net.kzn.shoppingbackend.dto.User"/>
     <var name="billing" class="net.kzn.shoppingbackend.dto.Address"/>         
                                         
     <!-- returning and adding inside the flow a registerModel instance -->
	<on-start>
		<evaluate expression="registerHandler.init()" result="flowScope.registerModel"/>
	</on-start>
                          
      <!-- Start state - z tego kroku nastepuje przejscie do stanu billing  (to="billing")  -->
      <view-state id="personal" view="flows/register/signup-personal" model="user">
      		<transition on="billing" to="billing"></transition>
      	<on-exit>
			<evaluate expression="registerHandler.addUser(flowScope.registerModel, user)" />			
		</on-exit>
      </view-state>                 
            
      <view-state id="billing" view="flows/register/signup-billing" model="billing">
      		<transition on="personal" to="personal"></transition>
      		<transition on="confirm" to="confirm"></transition>
      	<on-exit>
			<evaluate expression="registerHandler.addBilling(flowScope.registerModel, billing)" />
		</on-exit>
      </view-state>       
            
      <view-state id="confirm" view="flows/register/signup-confirm" model="flowScope.registerModel">
      		<transition on="personal" to="personal"></transition>
      		<transition on="billing" to="billing"></transition>
      		<transition on="submit" to="submit"></transition>
      </view-state> 
            
      	<!-- handle the submit action - nastepuje po nim przejscie do stanu "success" -->
		<action-state id="submit">
			<evaluate expression="registerHandler.saveAll(flowScope.registerModel)" />
			<transition on="success" to="success"/>
		</action-state>
            
      <!-- End state -->
      <end-state id="home" view="externalRedirect:contextRelative:/"/>
      <end-state id="success" view="flows/register/signup-success"/>        
                    
      <!-- Global Transition -->
      <!-- Przejscia stanow -->
      <!-- validate="false" - oznacza aby nie bylo wykonywanej validacji formularza przy przejsciu do strony home (walidacja odbywa sie tylko prz przejsciu do kolejnego etapu walidacji) -->
      <global-transitions>
      		<transition on="home" to="home" validate="false" />
      </global-transitions>      
                          
</flow>