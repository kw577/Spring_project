<!-- materialy o spring bean: https://www.tutorialspoint.com/spring/spring_bean_definition.htm -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:wf="http://www.springframework.org/schema/webflow-config"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/webflow-config
    http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd
    ">

	<!-- Skanowaie calego projektu-->
	<context:component-scan base-package="net.kzn.onlineshopping" />

	<!-- Polaczenie z projektem backendu - skanowaie calego projektu-->
	<context:component-scan base-package="net.kzn.shoppingbackend" />


	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
	</bean>

	<!-- Upload plikow z wykorzystaniem MultiPart - nie mozna wykorzystac innego id niz "multipartResolver" -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.support.StandardServletMultipartResolver"/>


	<!-- Loading static resources - szablon projektu frontendu -->
	<mvc:annotation-driven></mvc:annotation-driven>
	<!-- ladowanie szablonu projektu frontendu - mapowanie do lokalizacji plikow frontendu -->
	<mvc:resources location="/assets/" mapping="resources/**"></mvc:resources>

		
	<!-- Webflow configuration -->
	
	<wf:flow-executor id="flowExecutor" flow-registry="flowRegistry" />
	
	<!-- Uwaga !!! - okresla lokalizacje plikow flow.xml -->
	<wf:flow-registry id="flowRegistry" base-path="/WEB-INF/views/flows" flow-builder-services="flowBuilderServices">
		<wf:flow-location-pattern value="/**/*-flow.xml"/>		
	</wf:flow-registry>

	<wf:flow-builder-services id="flowBuilderServices"
    	view-factory-creator="viewFactoryCreator"
   	/>
   	
   	
   	<bean class="org.springframework.webflow.mvc.servlet.FlowHandlerAdapter">
		<property name="flowExecutor" ref="flowExecutor" />
	</bean>
	
	
	
	<bean class="org.springframework.webflow.mvc.servlet.FlowHandlerMapping">
		<property name="flowRegistry" ref="flowRegistry" />
		<property name="order" value="-1"/> <!-- Jesli wystepuje takie samo mapowanie w klasach typu controller - (tu PageController.java) - ustalame w ten sposob pierwszenstwo dla spring-webflow -->
	</bean>	
	
	
	
   	<bean id="viewFactoryCreator" class="org.springframework.webflow.mvc.builder.MvcViewFactoryCreator">
         <property name="viewResolvers" ref="viewResolver"/>
  
 	</bean>	
 	
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/> 	

</beans>